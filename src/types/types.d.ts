/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/create-user": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example dummy@test.com */
            email: string;
          };
        };
      };
      responses: {
        /** @description 成功時のレスポンス */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              user: {
                /** @example 95609ed8-5b01-4b9a-896a-6e44d2cfed61 */
                userName: string;
                /** @example 2023-12-24 02:44:12.644000+00:00 */
                userCreateDate: string;
                /** @example FORCE_CHANGE_PASSWORD */
                userStatus: string;
              };
            };
          };
        };
        /** @description エラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/init-password": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example dummy@test.com */
            email: string;
            /** @example Password */
            newPassword: string;
            /** @example dummy session */
            session: string;
          };
        };
      };
      responses: {
        /** @description 成功時のレスポンス */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              authenticationResult: components["schemas"]["AuthenticationResult"];
            };
          };
        };
        /** @description エラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example dummy@test.com */
            email: string;
            /** @example Password */
            password: string;
          };
        };
      };
      responses: {
        /** @description 成功時のレスポンス */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              /** @example challenge */
              challengeName?: string;
              authenticationResult?: components["schemas"]["AuthenticationResult"];
              /** @example session */
              session?: string;
            };
          };
        };
        /** @description エラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/token-reflesh": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example token */
            refleshToken: string;
          };
        };
      };
      responses: {
        /** @description 成功時のレスポンス */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              authenticationResult: {
                /** @example dummy IdToken */
                token: string;
                /** @example 300 */
                expiresIn: number;
                /** @example Bearer */
                tokenType: string;
              };
            };
          };
        };
        /** @description エラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/logout": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": {
            /** @example dummy@test.com */
            email: string;
          };
        };
      };
      responses: {
        /** @description 成功時のレスポンス */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              /** @example message */
              message: string;
            };
          };
        };
        /** @description エラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AuthenticationResult: {
      /** @example dummy RefreshToken */
      refreshToken: string;
      /** @example dummy IdToken */
      token: string;
      /** @example 300 */
      expiresIn: number;
      /** @example Bearer */
      tokenType: string;
    };
    ErrorResult: {
      /** @example EXPxxx9999 */
      errorCode: string;
      /** @example error message */
      message: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
