AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sample-sam-app

  Sample SAM Template for sample-sam-app
Parameters:
  ENV:
    Type: String
Resources:
  SampleCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: sampleCodebuildProject
      Description: A description about my project
      ServiceRole: !GetAtt SampleCodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ENV
            Type: PLAINTEXT
            Value: !Ref ENV
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      LogsConfig:
        CloudWatchLogs:
          GroupName: /aws/lambda/sample-codebuild-log
          Status: ENABLED

  SampleCodebuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/sample-codebuild-log
      RetentionInDays: 14
  
  SampleCodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "my-codebuild-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: sample-build-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:PutObject"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codecommit:CancelUploadArchive"
                  - "codecommit:GetBranch"
                  - "codecommit:GetCommit"
                  - "codecommit:GetUploadArchiveStatus"
                  - "codecommit:UploadArchive"
                  - "codecommit:GitPull"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ecr:DescribeImages"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:BatchPutCodeCoverages"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:CreateReport"
                  - "codebuild:CreateReportGroup"
                  - "codebuild:StartBuild"
                  - "codebuild:UpdateReport"
                Resource:
                  - !Sub "arn:aws:codebuild:*:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - "iam:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DeleteLogGroup"
                  - "logs:DeleteLogStream"
                  - "logs:DescribeLog*"
                  - "logs:FilterLogEvents"
                  - "logs:PutLogEvents"
                  - "logs:PutRetentionPolicy"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cognito-idp:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "resource-groups:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "applicationinsights:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "lambda:*"
                  - "apigateway:*"
                Resource: "*"
  
  SamplePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      RestartExecutionOnUpdate: false
      ArtifactStore:
        Type: S3
        Location: sample-pipeline-artifact-bucket-prdm
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: sam-node-sample
                BranchName: !Ref ENV
                PollForSourceChanges: false
              RunOrder: 1
              OutputArtifacts:
                - Name: App
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref SampleCodeBuild
              RunOrder: 1
              InputArtifacts:
                - Name: App
  
  CodePipelineServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "my-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: sample-pipeline-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:PutObject"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codecommit:CancelUploadArchive"
                  - "codecommit:GetBranch"
                  - "codecommit:GetCommit"
                  - "codecommit:GetUploadArchiveStatus"
                  - "codecommit:UploadArchive"
                  - "codecommit:GitPull"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "ecr:DescribeImages"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:StopBuild"
                  - "codebuild:RetryBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !Sub "arn:aws:codebuild:*:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - "iam:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DeleteLogGroup"
                  - "logs:DeleteLogStream"
                  - "logs:DescribeLog*"
                  - "logs:FilterLogEvents"
                  - "logs:PutLogEvents"
                  - "logs:PutRetentionPolicy"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codepipeline:*"
                Resource: "*"

  PipelineEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: eb-pipeline-execution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref SamplePipeline ] ]
  
  CodeCommitTriggerRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Repository State Change"
        resources:
          - arn:aws:codecommit:ap-northeast-1:633977121599:sam-node-sample
        detail:
          event:
            - "referenceUpdated"
          referenceType:
            - "branch"
          referenceName:
            - !Ref ENV
      Targets:
        - Arn: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref SamplePipeline ] ] 
          RoleArn: !GetAtt PipelineEventRole.Arn
          Id: codepipeline-AppPipeline